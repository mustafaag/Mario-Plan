{"version":3,"sources":["serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","configs/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","helpers/PrivateRoute.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/layout/Navigation.js","App.js","store/storeConfig.js","index.js"],"names":["Boolean","window","location","hostname","match","initState","authError","authReducer","state","action","type","console","log","error","projects","id","title","content","projectReducer","project","rootReducer","combineReducers","auth","firestore","firestoreReducer","firebase","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","connect","dispatch","signOut","getState","getFirebase","then","props","className","to","onClick","profile","initials","SignedOutLinks","links","uid","Component","component","rest","render","Notifications","notifications","map","not","key","user","moment","time","toDate","fromNow","ProjectSummary","authorFname","authorLname","createdAt","calendar","ProjectList","Dashboard","this","compose","ordered","firestoreConnect","collection","limit","orderBy","ownProps","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleOnChange","setState","target","value","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","message","SignUp","fname","lname","singUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","rows","dispatchMethod","authorId","add","Date","Navigation","exact","path","ProjectDetails","App","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","RdxStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b2ffd81.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState= {\n    authError: null\n}\n\nconst authReducer = (state= initState, action) =>{\n    switch(action.type){\n        case 'AUTH_FAILED': \n            console.log(action.error);\n            return {\n                ...state,\n                authError: action.error\n            }\n        case 'LOGIN_SUCCESS': \n            console.log('success')\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNOUT_SUCCESS': \n            console.log('signout');\n            return state;\n        case 'SIGNUP_SUCCESS': \n            console.log('singup success');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_FAILED': \n            console.log('singup error', action.error);\n            return {\n                ...state,\n                authError: action.error\n            };\n        \n        default: \n        return state;\n    }\n}\n\nexport default authReducer;","const initState= {\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n    ]\n}\n\nconst projectReducer = (state= initState, action) =>{\n    switch (action.type){\n        case 'CREATE_PR':\n            console.log('created project', action.project)\n            return state; \n        case 'CREATE_PR_ERROR': \n            console.log('created project', action.error)\n            break;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\n\n\n\nconst rootReducer = combineReducers(\n    {\n        auth: authReducer,\n        project: projectReducer,\n        firestore: firestoreReducer,\n        firebase: firebaseReducer\n    }\n)\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCil6VFiht2zvjbbLL8kYYCI0QgV-wp-LI\",\n    authDomain: \"marioplan-6c949.firebaseapp.com\",\n    databaseURL: \"https://marioplan-6c949.firebaseio.com\",\n    projectId: \"marioplan-6c949\",\n    storageBucket: \"marioplan-6c949.appspot.com\",\n    messagingSenderId: \"733321358255\",\n    appId: \"1:733321358255:web:432459da94a13ea9f85d5a\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({})\n\n  export default firebase;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\n\nconst SignedInLinks = (props) => {\n    return (\n       <ul className=\"right\">\n           <li><NavLink to='/create'>New Project</NavLink></li>\n           <li><span className=\"link\" onClick={ props.signOut} >Log Out</span></li>\n           <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile? props.profile.initials : null}</NavLink></li>\n       </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        signOut: () =>dispatch(signOut())\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps) (SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase =getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then (() =>{\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) =>{\n            dispatch({ type: 'AUTH_FAILED', error: err.message})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() =>{\n            dispatch( {type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const singUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) =>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                fname: newUser.fname,\n                lname: newUser.lname,\n                initials: newUser.fname[0] + newUser.lname[0]\n            }).then(() => {\n                dispatch({ type: 'SIGNUP_SUCCESS'})    \n            })\n        }).catch((err) =>{\n            dispatch({ type: 'SIGNUP_FAILED', error: err.message})\n        })\n    } \n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst SignedOutLinks = () => {\n    return (\n       <ul className=\"right\">\n           <li><NavLink to='/signup'>SignUp</NavLink></li>\n           <li><NavLink to='/signin'>Log In</NavLink></li>\n       </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ?  <SignedInLinks profile={profile}/> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo \">\n                    Mario Plan            \n                </Link>\n                {links}         \n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{   \n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !!auth.uid ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport moment from 'moment';\n\n\nconst Notifications = ({ notifications }) =>{\n\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(not => {\n                            return (\n                                <li key={not.id}> \n                                    <span className=\"pink-text\"> {not.user} </span>\n                                    <span> { not.content  }</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(not.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    \n    return (\n        <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n            <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFname} { project.authorLname}</p>\n            <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n    </div>\n    );\n}\n\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n    \n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map( project => {\n                return(\n                    <Link to={ '/project/'+ project.id} key={project.id}>\n                        <ProjectSummary project={project} key={project.id} />\n                    </Link>\n                    \n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\n\nclass Dashboard extends Component {\n  \n    render(){\n        const { projects, auth, notifications } = this.props;\n\n        if(!auth.uid){\n          return <Redirect to='/signin'/>\n        }\n        return(\n            <div className=\"dashboard container\">\n            <div className=\"row\">\n              <div className=\"col s12 m6\">\n                <ProjectList projects={ projects }/>\n              </div>\n              <div className=\"col s12 m5 offset-m1\">\n                <Notifications notifications={notifications} />\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\nconst mapStateToProps = (state) =>{\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default  compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', limit: 4, orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 4 ,orderBy: ['time', 'desc']}\n  ])\n)(Dashboard);","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project } = props;\n\n    if(project){\n        return(\n        <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n            <div className=\"content\">\n                <span className='card-title'>\n                {project.title}                     \n                </span>\n                <p>\n                {project.content}                     \n                </p>\n            </div>\n            <div className=\"card-action gret lighten-4 grey-text\">\n            <div>Posted by {project.authorFname} { project.authorLname }</div>\n                <div>{ moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n        </div>\n    </div>)\n    }else{\n        return(\n            <div className='container center'>\n                <div> Loading ...</div>\n            </div>\n        )\n    }\n\n   \n}\nconst mapStateToProps = (state, ownProps) =>{\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects;\n    const project = projects? projects[id] : null;\n    \n    return{\n        project: project\n    }\n}\n\nexport default  compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)\n(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n       \n    }\n    \n    \n    render() {\n        const { auth, authError } = this.props;\n        if (auth && auth.uid) return <Redirect to='/' /> \n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\"> Sign In </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\"> Email </label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\"> Password </label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                       <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>   {authError} </p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nexport default  connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { singUp } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass SignUp extends Component {\n    state = {\n        fname: '',\n        lname: '',\n        email: '',\n        password: ''\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.singUp(this.state);\n    }\n\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n       \n    }\n    \n    \n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' /> \n        return (\n     \n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\"> Sign Up </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"fname\"> First Name </label>\n                        <input type=\"text\" id=\"fname\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lname\"> Last Name </label>\n                        <input type=\"text\" id=\"lname\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\"> Email </label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\"> Password </label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                       <button className=\"btn pink lighten-1 z-depth-0\" >SignUp</button>\n                       <div className=\"center red-text\">\n                            { authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        singUp: (newUser) => dispatch(singUp(newUser))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      authError: state.auth.authError\n    }\n  }\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps) (SignUp)\n","import React, { Component } from 'react'\nimport {createProject} from '../../store/actions/projectActions';\nimport { connect } from 'react-redux';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/')\n    }\n\n    handleOnChange = (e) => {\n        this.setState({\n            [e.target.id] : e.target.value\n        })\n       \n    }\n    \n    \n    render() {\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\"> Create Project </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\"> Title </label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleOnChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\"> Content </label>\n                        <textarea  className=\"materialize-textarea\" rows=\"30\" id=\"content\" onChange={this.handleOnChange}>\n\n                        </textarea>\n                    </div>\n                    <div className=\"input-field\">\n                       <button className=\"btn pink lighten-1 z-depth-0\">Add</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatchMethod) => {\n    return {\n        createProject: (project) => dispatchMethod(createProject(project))\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n      auth: state.firebase.auth\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore}) =>{\n        //make async call to DB\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFname: profile.fname,\n            authorLname: profile.lname,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(()=> {\n            dispatch({type: 'CREATE_PR', project});    \n        }).catch((error) =>{\n            dispatch({type: 'CREATE_PR_ERROR', error});    \n        })\n        \n    }\n}","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport React from 'react';\nimport PrivateRoute from '../../helpers/PrivateRoute';\nimport Dashboard from '../dashboard/Dashboard';\nimport ProjectDetails from '../projects/ProjectDetails';\nimport SignIn from '../auth/SignIn';\nimport SignUp from '../auth/SignUp';\nimport CreateProject from '../projects/CreateProject';\n\nconst Navigation = () =>{\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar />\n                <Switch>\n                    <PrivateRoute exact path='/' component={Dashboard}  />\n                    <PrivateRoute path='/project/:id' component={ ProjectDetails } />\n                    <Route path='/signin' component={ SignIn } />\n                    <Route path='/signup' component={ SignUp } />\n                    <PrivateRoute path='/create' component={ CreateProject } />\n                </Switch> \n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default Navigation;","import React from 'react';\nimport Navigation from './components/layout/Navigation';\n\nfunction App() {\n  return (\n    \n    <Navigation/>\n   \n  );\n}\n\nexport default App;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore, createFirestoreInstance } from \"redux-firestore\";\nimport { getFirebase, ReactReduxFirebaseProvider, isLoaded } from \"react-redux-firebase\";\nimport firebase from 'firebase/app';\nimport fbConfig from '../configs/fbConfig';\nimport { Provider, useSelector } from 'react-redux';\nimport React from 'react';\nimport App from '../App'\n\nconst store = createStore(rootReducer , \n    compose( \n        applyMiddleware( thunk.withExtraArgument({ getFirestore , getFirebase })),\n        reduxFirestore( firebase , fbConfig )\n    )\n);\nconst rrfConfig = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n    attachAuthIsReady: true\n  };\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n}\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n        return children\n}\n\nconst RdxStore = () => {\n    return (\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <AuthIsLoaded>\n                    <App /> \n                </AuthIsLoaded>                \n            </ReactReduxFirebaseProvider> \n        </Provider>\n    )\n}\n\nexport default RdxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport RdxStore from './store/storeConfig';\n\n\nReactDOM.render( <RdxStore />   , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}